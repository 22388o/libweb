// Generated by IcedCoffeeScript 108.0.7
(function() {
  var Request, base,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  base = require('../base/request');

  exports.Request = Request = (function(_super) {
    __extends(Request, _super);

    function Request(_arg) {
      var $, get_csrf_token;
      $ = _arg.$, get_csrf_token = _arg.get_csrf_token;
      this.jQuery = $;
      Request.__super__.constructor.call(this, {
        get_csrf_token: get_csrf_token
      });
    }

    Request.prototype.request = function(inargs, cb) {
      var finish, headers, params, xhr;
      headers = this._make_headers(inargs);
      params = {
        type: inargs.method,
        url: inargs.url,
        data: inargs.params,
        headers: headers,
        dataType: "json"
      };
      xhr = this.jQuery.ajax(params);
      finish = (function(_this) {
        return function(err) {
          var tmp;
          if ((tmp = cb) == null) {
            return;
          }
          cb = null;
          return _this._handle_response({
            err: err,
            inargs: inargs,
            body: xhr.responseJSON,
            http_status: xhr.status
          }, tmp);
        };
      })(this);
      xhr.fail(function(_, textStatus) {
        return finish(new Error(textStatus));
      });
      return xhr.done(function() {
        return finish(null);
      });
    };

    return Request;

  })(base.Request);

}).call(this);
